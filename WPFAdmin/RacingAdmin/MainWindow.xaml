<Window x:Class="GSRacing.RacingAdmin.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:local="clr-namespace:GSRacing.RacingAdmin"
        Title="Race Administrator" Height="448" Width="708" Background="Green">
    <Window.InputBindings>
        <KeyBinding Command="{Binding SendStartRaceCommand}" Key="Space"/>
        <KeyBinding Command="{Binding SendCloseGateCommand}" Key="F1"/>
        <KeyBinding Command="{Binding ResetHeatCommand}" Key="F2"/>
        <KeyBinding Command="{Binding GoBackToLastHeatCommand}" Key="F3" />
    </Window.InputBindings>
    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF464545" Offset="0.0"/>
            <GradientStop Color="#FF2E2E2E" Offset="1.0"/>
        </LinearGradientBrush>

        <Style x:Key="NormalText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
        </Style>

    </Window.Resources>
    <Grid>
        <MediaElement Name="mePlayer" Visibility="Hidden" LoadedBehavior="Manual" Stretch="None"  />

        <Grid x:Name="gridEventMenu" Visibility="{Binding EventMenuVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="Select Event:" HorizontalAlignment="Left" Style="{DynamicResource NormalText}" Margin="40,43,0,0" VerticalAlignment="Top" />
            <ComboBox ItemsSource="{Binding AllEvents}" 
                      DisplayMemberPath="EventName"
                      SelectedValuePath="EventID"
                      SelectedValue="{Binding SelectedEventID}"
                      Margin="130,40,0,0"
                      Width="250"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      />
            <Button Content="Load Event"  Width="100" HorizontalAlignment="Left" 
                        Command="{Binding Path=DataContext.LoadEventCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                    Margin="388,37,0,0" 
                    Height="31" VerticalAlignment="Top" />
            <Button Content="Create Event"  Width="100" HorizontalAlignment="Left" 
                        Command="{Binding Path=DataContext.CreateEventCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                    Margin="490,37,0,0" 
                    Height="31" VerticalAlignment="Top" />
        </Grid>

        <Grid x:Name="gridRacers" Visibility="{Binding RacersVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="Event Name:" HorizontalAlignment="Left" Style="{DynamicResource NormalText}" Margin="40,43,0,0" VerticalAlignment="Top" />
            <TextBox Text="{Binding Event.EventName}" HorizontalAlignment="Left" Width="347" Margin="112,38,0,0" Height="23" VerticalAlignment="Top"/>
            <TextBlock Text="Event Date:" HorizontalAlignment="Left" Style="{DynamicResource NormalText}" Margin="44,17,0,380" Width="79" />
            <DatePicker SelectedDate="{Binding Event.EventDate}"  HorizontalAlignment="Left" Width="152" Margin="112,13,0,0" Height="25" VerticalAlignment="Top"></DatePicker>
            <TextBlock Text="Tracks:" HorizontalAlignment="Left" Style="{DynamicResource NormalText}" Margin="289,17,0,0" Width="38" Height="16" VerticalAlignment="Top" />
            <xctk:IntegerUpDown Value="{Binding Event.TrackCount}" Minimum="2" Maximum="24" HorizontalAlignment="Left" Margin="332,14,0,0" Height="22" Width="61" VerticalAlignment="Top"/>
            <Button Content="Add Racer"  Width="100" HorizontalAlignment="Right" 
                        Command="{Binding Path=DataContext.AddNewRacerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Margin="0,35,115,0" Height="31" VerticalAlignment="Top" />
            <Button Content="Continue"  Width="100" HorizontalAlignment="Right" 
                        Command="{Binding Path=DataContext.CreateHeatsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Margin="0,35,10,0" Height="31" VerticalAlignment="Top" />
            <ListBox x:Name="lbRacers" 
                    ItemsSource="{Binding Event.Racers}"  
                    ItemTemplate="{DynamicResource RacerInputItem}"
                     HorizontalContentAlignment="Stretch"
                    ScrollViewer.VerticalScrollBarVisibility="Visible" Margin="10,81,10,10"/>
        </Grid>
        <Grid x:Name="gridHeats" Visibility="{Binding HeatsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <Grid>                
                    <Button Content="Continue"  Width="100" HorizontalAlignment="Right" 
                                Command="{Binding Path=DataContext.StartRaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                            Margin="0,10,10,0" Height="31" VerticalAlignment="Top">
                        <Button.Style>
                            <Style>
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="UIElement.PreviewMouseDown">
                                        <EventTrigger.Actions>
                                            <SoundPlayerAction Source="pack://siteoforigin:,,,/Sounds/race.wav" />
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <ItemsControl x:Name="icHeatsPreview" 
                                  Margin="10,46,10,10" 
                                  Grid.Column="1" 
                                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                                  ItemTemplate="{DynamicResource HeatPreviewItem}" 
                                  HorizontalContentAlignment="Stretch"
                                  ItemsSource="{Binding Event.Heats}" />
                </Grid>
            </ScrollViewer>
        </Grid>



        <Grid x:Name="gridCurrentHeat" Visibility="{Binding CurrentHeatVisible, Converter={StaticResource BooleanToVisibilityConverter}}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400*"/>
                <ColumnDefinition Width="300*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <TextBlock Text="{Binding HeatText}" Padding="10,0,10,0" FontSize="72" Background="#FF6A2D02" Foreground="White" Margin="10,20,10,0" Height="102" VerticalAlignment="Top"></TextBlock>
            </Grid>
            <ItemsControl Margin="10,150,10,10" Grid.Column="0" ItemTemplate="{DynamicResource HeatTimeItem}" ItemsSource="{Binding CurrentHeat.HeatTimes}" />
            <Grid Grid.Column="1">
                <TextBlock Text="On Deck" FontSize="32" Foreground="White" Margin="10,10,10,0"></TextBlock>
            </Grid>
            <ItemsControl x:Name="icNextHeat" Margin="10,70,10,10" Grid.Column="1" ItemTemplate="{DynamicResource NextHeatTimeItem}" ItemsSource="{Binding NextHeat.HeatTimes}" />
            <Image Source="icons/browniecrall.png" Grid.Column="1" Margin="10,300,10,0" />

        </Grid>

        <Grid x:Name="gridFinalResults" Visibility="{Binding FinalResultsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ItemsControl x:Name="icFinalResults" Margin="10,50,10,0" Grid.Column="1" ItemTemplate="{DynamicResource FinalResultItem}" ItemsSource="{Binding Event.Results}" />
        </Grid>

        <Grid x:Name="gridCountdown" Visibility="{Binding CountdownVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400*"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="400*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Height="200" Width="200" Padding="80,50,0,0" Text="{Binding CountdownText}" HorizontalAlignment="Center" FontSize="72" Grid.Column="1" Foreground="White" Background="#FF6A2D02"></TextBlock>
        </Grid>
    </Grid>
</Window>
